{"componentChunkName":"component---src-templates-post-tsx","path":"/solid-principles/","result":{"data":{"markdownRemark":{"html":"<p>SOLID is a mnemonic abbreviation for a set of design principles created for software development in object-oriented languages.</p>\n<br/>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#the-single-responsibility-principle-srp\">The Single-Responsibility Principle (SRP)</a></li>\n<li><a href=\"#the-open-closed-principle-ocp\">The Open-Closed Principle (OCP)</a></li>\n<li><a href=\"#the-liskov-substitution-principle-lsp\">The Liskov Substitution Principle (LSP)</a></li>\n<li><a href=\"#the-interface-segregation-principle-isp\">The Interface Segregation Principle (ISP)</a></li>\n<li><a href=\"#the-dependency-inversion-principle-dip\">The Dependency inversion Principle (DIP)</a></li>\n</ul>\n</div>\n<h2 id=\"the-single-responsibility-principle-srp\" style=\"position:relative;\"><a href=\"#the-single-responsibility-principle-srp\" aria-label=\"the single responsibility principle srp permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The Single-Responsibility Principle (SRP)</h2>\n<p>The Single Responsibility Principle requires that a class should have only one job.\nAnother way to say it is that we want classes and methods to have high cohesion. Be responsible for only a single thing and that ensures us that we can reuse them much easier later on.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Order</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>items <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        self<span class=\"token punctuation\">.</span>quantities <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        self<span class=\"token punctuation\">.</span>prices <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        self<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token string\">\"open\"</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">add_item</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> quantity<span class=\"token punctuation\">,</span> price<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>quantities<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>quantity<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>prices<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>price<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">total_price</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        total <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>prices<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            total <span class=\"token operator\">+=</span> self<span class=\"token punctuation\">.</span>quantities<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> self<span class=\"token punctuation\">.</span>prices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">return</span> total\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">pay</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> payment_type<span class=\"token punctuation\">,</span> security_code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> payment_type <span class=\"token operator\">==</span> <span class=\"token string\">\"debit\"</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Processing debit payment type\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Verifying security code: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>security_code<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n            self<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token string\">\"paid\"</span>\n        <span class=\"token keyword\">elif</span> payment_type <span class=\"token operator\">==</span> <span class=\"token string\">\"credit\"</span></code></pre></div>\n<p>Order class has way too many responsibilities and we need to fix that.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Order</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>items <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        self<span class=\"token punctuation\">.</span>quantities <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        self<span class=\"token punctuation\">.</span>prices <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        self<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token string\">\"open\"</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">add_item</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> quantity<span class=\"token punctuation\">,</span> price<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>quantities<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>quantity<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>prices<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>price<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">total_price</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        total <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>prices<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            total <span class=\"token operator\">+=</span> self<span class=\"token punctuation\">.</span>quantities<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> self<span class=\"token punctuation\">.</span>prices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">return</span> total\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">PaymentProcessor</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">pay_debit</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> order<span class=\"token punctuation\">,</span> security_code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Processing debit payment type\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Verifying security code: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>security_code<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n        order<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token string\">\"paid\"</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">pay_credit</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> order<span class=\"token punctuation\">,</span> security_code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Processing credit payment type\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Verifying security code: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>security_code<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n        order<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token string\">\"paid\"</span>\n\n\norder <span class=\"token operator\">=</span> Order<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\norder<span class=\"token punctuation\">.</span>add_item<span class=\"token punctuation\">(</span><span class=\"token string\">\"Keyboard\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span>\norder<span class=\"token punctuation\">.</span>add_item<span class=\"token punctuation\">(</span><span class=\"token string\">\"SSD\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">)</span>\norder<span class=\"token punctuation\">.</span>add_item<span class=\"token punctuation\">(</span><span class=\"token string\">\"USB cable\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>order<span class=\"token punctuation\">.</span>total_price<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nprocessor <span class=\"token operator\">=</span> PaymentProcessor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nprocessor<span class=\"token punctuation\">.</span>pay_debit<span class=\"token punctuation\">(</span>order<span class=\"token punctuation\">,</span> <span class=\"token string\">\"0372846\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Here we also introduced some coupling.</p>\n<h2 id=\"the-open-closed-principle-ocp\" style=\"position:relative;\"><a href=\"#the-open-closed-principle-ocp\" aria-label=\"the open closed principle ocp permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The Open-Closed Principle (OCP)</h2>\n<p>Software entities (classes, modules, functions) should be open for extension, but not modification.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Order</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>items <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        self<span class=\"token punctuation\">.</span>quantities <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        self<span class=\"token punctuation\">.</span>prices <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        self<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token string\">\"open\"</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">add_item</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> quantity<span class=\"token punctuation\">,</span> price<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>quantities<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>quantity<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>prices<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>price<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">total_price</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        total <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>prices<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            total <span class=\"token operator\">+=</span> self<span class=\"token punctuation\">.</span>quantities<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> self<span class=\"token punctuation\">.</span>prices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">return</span> total\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">PaymentProcessor</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">pay_debit</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> order<span class=\"token punctuation\">,</span> security_code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Processing debit payment type\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Verifying security code: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>security_code<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n        order<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token string\">\"paid\"</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">pay_credit</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> order<span class=\"token punctuation\">,</span> security_code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Processing credit payment type\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Verifying security code: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>security_code<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n        order<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token string\">\"paid\"</span>\n\n\norder <span class=\"token operator\">=</span> Order<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\norder<span class=\"token punctuation\">.</span>add_item<span class=\"token punctuation\">(</span><span class=\"token string\">\"Keyboard\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span>\norder<span class=\"token punctuation\">.</span>add_item<span class=\"token punctuation\">(</span><span class=\"token string\">\"SSD\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">)</span>\norder<span class=\"token punctuation\">.</span>add_item<span class=\"token punctuation\">(</span><span class=\"token string\">\"USB cable\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>order<span class=\"token punctuation\">.</span>total_price<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nprocessor <span class=\"token operator\">=</span> PaymentProcessor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nprocessor<span class=\"token punctuation\">.</span>pay_debit<span class=\"token punctuation\">(</span>order<span class=\"token punctuation\">,</span> <span class=\"token string\">\"0372846\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Now the issue is if we want to add an extra payment method like bitcoin or apple pay or paypal we have to modify the payment processor class so that violates the open\nclosed principle. Optimally what we'd like to do is create a structure of classes and subclasses, so that we can just define a new subclass for each new payment type.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> abc <span class=\"token keyword\">import</span> ABC<span class=\"token punctuation\">,</span> abstractmethod\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Order</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>items <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        self<span class=\"token punctuation\">.</span>quantities <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        self<span class=\"token punctuation\">.</span>prices <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        self<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token string\">\"open\"</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">add_item</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> quantity<span class=\"token punctuation\">,</span> price<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>quantities<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>quantity<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>prices<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>price<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">total_price</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        total <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>prices<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            total <span class=\"token operator\">+=</span> self<span class=\"token punctuation\">.</span>quantities<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> self<span class=\"token punctuation\">.</span>prices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">return</span> total\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">PaymentProcessor</span><span class=\"token punctuation\">(</span>ABC<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token decorator annotation punctuation\">@abstractmethod</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">pay</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> order<span class=\"token punctuation\">,</span> security_code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">pass</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">DebitPaymentProcessor</span><span class=\"token punctuation\">(</span>PaymentProcessor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">pay</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> order<span class=\"token punctuation\">,</span> security_code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Processing debit payment type\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Verifying security code: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>security_code<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n        order<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token string\">\"paid\"</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">CreditPaymentProcessor</span><span class=\"token punctuation\">(</span>PaymentProcessor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">pay</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> order<span class=\"token punctuation\">,</span> security_code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Processing credit payment type\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Verifying security code: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>security_code<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n        order<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token string\">\"paid\"</span>\n\n\norder <span class=\"token operator\">=</span> Order<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\norder<span class=\"token punctuation\">.</span>add_item<span class=\"token punctuation\">(</span><span class=\"token string\">\"Keyboard\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span>\norder<span class=\"token punctuation\">.</span>add_item<span class=\"token punctuation\">(</span><span class=\"token string\">\"SSD\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">)</span>\norder<span class=\"token punctuation\">.</span>add_item<span class=\"token punctuation\">(</span><span class=\"token string\">\"USB cable\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>order<span class=\"token punctuation\">.</span>total_price<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nprocessor <span class=\"token operator\">=</span> DebitPaymentProcessor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nprocessor<span class=\"token punctuation\">.</span>pay<span class=\"token punctuation\">(</span>order<span class=\"token punctuation\">,</span> <span class=\"token string\">\"0372846\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Now we do not violate this open close principle anymore because if we want to add another\npayment type like paypal for example we don't have to change the payment processor or the\norder anymore.</p>\n<h2 id=\"the-liskov-substitution-principle-lsp\" style=\"position:relative;\"><a href=\"#the-liskov-substitution-principle-lsp\" aria-label=\"the liskov substitution principle lsp permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The Liskov Substitution Principle (LSP)</h2>\n<p>The main idea behind the Liskov Substitution Principle is that for any class, the client should be able to use any subclass of the base class without noticing the difference between them, and therefore without any change in the behavior of the program during execution.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> abc <span class=\"token keyword\">import</span> ABC<span class=\"token punctuation\">,</span> abstractmethod\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Order</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>items <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        self<span class=\"token punctuation\">.</span>quantities <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        self<span class=\"token punctuation\">.</span>prices <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        self<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token string\">\"open\"</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">add_item</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> quantity<span class=\"token punctuation\">,</span> price<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>quantities<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>quantity<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>prices<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>price<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">total_price</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        total <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>prices<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            total <span class=\"token operator\">+=</span> self<span class=\"token punctuation\">.</span>quantities<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> self<span class=\"token punctuation\">.</span>prices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">return</span> total\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">PaymentProcessor</span><span class=\"token punctuation\">(</span>ABC<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token decorator annotation punctuation\">@abstractmethod</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">pay</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> order<span class=\"token punctuation\">,</span> security_code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">pass</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">DebitPaymentProcessor</span><span class=\"token punctuation\">(</span>PaymentProcessor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">pay</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> order<span class=\"token punctuation\">,</span> security_code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Processing debit payment type\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Verifying security code: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>security_code<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n        order<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token string\">\"paid\"</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">CreditPaymentProcessor</span><span class=\"token punctuation\">(</span>PaymentProcessor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">pay</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> order<span class=\"token punctuation\">,</span> security_code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Processing credit payment type\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Verifying security code: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>security_code<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n        order<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token string\">\"paid\"</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> abc <span class=\"token keyword\">import</span> ABC<span class=\"token punctuation\">,</span> abstractmethod\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Order</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>items <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        self<span class=\"token punctuation\">.</span>quantities <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        self<span class=\"token punctuation\">.</span>prices <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        self<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token string\">\"open\"</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">add_item</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> quantity<span class=\"token punctuation\">,</span> price<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>quantities<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>quantity<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>prices<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>price<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">total_price</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        total <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>prices<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            total <span class=\"token operator\">+=</span> self<span class=\"token punctuation\">.</span>quantities<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> self<span class=\"token punctuation\">.</span>prices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">return</span> total\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">PaymentProcessor</span><span class=\"token punctuation\">(</span>ABC<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token decorator annotation punctuation\">@abstractmethod</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">pay</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> order<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">pass</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">DebitPaymentProcessor</span><span class=\"token punctuation\">(</span>PaymentProcessor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> security_code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>security_code <span class=\"token operator\">=</span> security_code\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">pay</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> order<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Processing debit payment type\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Verifying security code: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>security_code<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n        order<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token string\">\"paid\"</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">CreditPaymentProcessor</span><span class=\"token punctuation\">(</span>PaymentProcessor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> security_code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>security_code <span class=\"token operator\">=</span> security_code\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">pay</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> order<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Processing credit payment type\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Verifying security code: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>security_code<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n        order<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token string\">\"paid\"</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">PaypalPaymentProcessor</span><span class=\"token punctuation\">(</span>PaymentProcessor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> email_address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>email_address <span class=\"token operator\">=</span> email_address\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">pay</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> order<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Processing paypal payment type\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Using email address: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>email_address<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n        order<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token string\">\"paid\"</span>\n\n\norder <span class=\"token operator\">=</span> Order<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\norder<span class=\"token punctuation\">.</span>add_item<span class=\"token punctuation\">(</span><span class=\"token string\">\"Keyboard\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span>\norder<span class=\"token punctuation\">.</span>add_item<span class=\"token punctuation\">(</span><span class=\"token string\">\"SSD\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">)</span>\norder<span class=\"token punctuation\">.</span>add_item<span class=\"token punctuation\">(</span><span class=\"token string\">\"USB cable\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>order<span class=\"token punctuation\">.</span>total_price<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nprocessor <span class=\"token operator\">=</span> PaypalPaymentProcessor<span class=\"token punctuation\">(</span><span class=\"token string\">\"hi@arjancodes.com\"</span><span class=\"token punctuation\">)</span>\nprocessor<span class=\"token punctuation\">.</span>pay<span class=\"token punctuation\">(</span>order<span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"the-interface-segregation-principle-isp\" style=\"position:relative;\"><a href=\"#the-interface-segregation-principle-isp\" aria-label=\"the interface segregation principle isp permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The Interface Segregation Principle (ISP)</h2>\n<p>Many client-specific interfaces are better than one general-purpose interface</p>\n<p>I've extended this example to now  include a two-factor authentication inside the payment processor class</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> abc <span class=\"token keyword\">import</span> ABC<span class=\"token punctuation\">,</span> abstractmethod\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Order</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>items <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        self<span class=\"token punctuation\">.</span>quantities <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        self<span class=\"token punctuation\">.</span>prices <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        self<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token string\">\"open\"</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">add_item</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> quantity<span class=\"token punctuation\">,</span> price<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>quantities<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>quantity<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>prices<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>price<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">total_price</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        total <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>prices<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            total <span class=\"token operator\">+=</span> self<span class=\"token punctuation\">.</span>quantities<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> self<span class=\"token punctuation\">.</span>prices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">return</span> total\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">PaymentProcessor</span><span class=\"token punctuation\">(</span>ABC<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token decorator annotation punctuation\">@abstractmethod</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">auth_sms</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">pass</span>\n\n    <span class=\"token decorator annotation punctuation\">@abstractmethod</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">pay</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> order<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">pass</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">DebitPaymentProcessor</span><span class=\"token punctuation\">(</span>PaymentProcessor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> security_code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>security_code <span class=\"token operator\">=</span> security_code\n        self<span class=\"token punctuation\">.</span>verified <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">auth_sms</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Verifying SMS code </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>code<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>verified <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">pay</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> order<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> self<span class=\"token punctuation\">.</span>verified<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">\"Not authorized\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Processing debit payment type\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Verifying security code: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>security_code<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n        order<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token string\">\"paid\"</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">CreditPaymentProcessor</span><span class=\"token punctuation\">(</span>PaymentProcessor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> security_code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>security_code <span class=\"token operator\">=</span> security_code\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">auth_sms</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">\"Credit card payments don't support SMS code authorization.\"</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">pay</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> order<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Processing credit payment type\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Verifying security code: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>security_code<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n        order<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token string\">\"paid\"</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">PaypalPaymentProcessor</span><span class=\"token punctuation\">(</span>PaymentProcessor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> email_address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>email_address <span class=\"token operator\">=</span> email_address\n        self<span class=\"token punctuation\">.</span>verified <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">auth_sms</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Verifying SMS code </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>code<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>verified <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">pay</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> order<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> self<span class=\"token punctuation\">.</span>verified<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">\"Not authorized\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Processing paypal payment type\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Using email address: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>email_address<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n        order<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token string\">\"paid\"</span>\n\n\norder <span class=\"token operator\">=</span> Order<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\norder<span class=\"token punctuation\">.</span>add_item<span class=\"token punctuation\">(</span><span class=\"token string\">\"Keyboard\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span>\norder<span class=\"token punctuation\">.</span>add_item<span class=\"token punctuation\">(</span><span class=\"token string\">\"SSD\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">)</span>\norder<span class=\"token punctuation\">.</span>add_item<span class=\"token punctuation\">(</span><span class=\"token string\">\"USB cable\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>order<span class=\"token punctuation\">.</span>total_price<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nprocessor <span class=\"token operator\">=</span> DebitPaymentProcessor<span class=\"token punctuation\">(</span><span class=\"token string\">\"2349875\"</span><span class=\"token punctuation\">)</span>\nprocessor<span class=\"token punctuation\">.</span>auth_sms<span class=\"token punctuation\">(</span><span class=\"token number\">465839</span><span class=\"token punctuation\">)</span>\nprocessor<span class=\"token punctuation\">.</span>pay<span class=\"token punctuation\">(</span>order<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Here you see an issue with defining a generic interface like the payment processor to do multiple things that are not always applicable to subclasses.\nIn this case not all subclasses support two-factor authentication so it's better to create\nseparate interfaces for this and what you could do for example is add a second subclass of payment processor that adds sms two-factor authentication capabilities.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> abc <span class=\"token keyword\">import</span> ABC<span class=\"token punctuation\">,</span> abstractmethod\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Order</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>items <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        self<span class=\"token punctuation\">.</span>quantities <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        self<span class=\"token punctuation\">.</span>prices <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        self<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token string\">\"open\"</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">add_item</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> quantity<span class=\"token punctuation\">,</span> price<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>quantities<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>quantity<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>prices<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>price<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">total_price</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        total <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>prices<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            total <span class=\"token operator\">+=</span> self<span class=\"token punctuation\">.</span>quantities<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> self<span class=\"token punctuation\">.</span>prices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">return</span> total\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">PaymentProcessor</span><span class=\"token punctuation\">(</span>ABC<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token decorator annotation punctuation\">@abstractmethod</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">pay</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> order<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">pass</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">PaymentProcessor_SMS</span><span class=\"token punctuation\">(</span>PaymentProcessor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token decorator annotation punctuation\">@abstractmethod</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">auth_sms</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">pass</span>\n\n    <span class=\"token decorator annotation punctuation\">@abstractmethod</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">pay</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> order<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">pass</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">DebitPaymentProcessor</span><span class=\"token punctuation\">(</span>PaymentProcessor_SMS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> security_code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>security_code <span class=\"token operator\">=</span> security_code\n        self<span class=\"token punctuation\">.</span>verified <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">auth_sms</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Verifying SMS code </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>code<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>verified <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">pay</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> order<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> self<span class=\"token punctuation\">.</span>verified<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">\"Not authorized\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Processing debit payment type\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Verifying security code: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>security_code<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n        order<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token string\">\"paid\"</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">CreditPaymentProcessor</span><span class=\"token punctuation\">(</span>PaymentProcessor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> security_code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>security_code <span class=\"token operator\">=</span> security_code\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">pay</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> order<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Processing credit payment type\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Verifying security code: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>security_code<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n        order<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token string\">\"paid\"</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">PaypalPaymentProcessor</span><span class=\"token punctuation\">(</span>PaymentProcessor_SMS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> email_address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>email_address <span class=\"token operator\">=</span> email_address\n        self<span class=\"token punctuation\">.</span>verified <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">auth_sms</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Verifying SMS code </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>code<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>verified <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">pay</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> order<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> self<span class=\"token punctuation\">.</span>verified<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">\"Not authorized\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Processing paypal payment type\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Using email address: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>email_address<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n        order<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token string\">\"paid\"</span>\n\n\norder <span class=\"token operator\">=</span> Order<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\norder<span class=\"token punctuation\">.</span>add_item<span class=\"token punctuation\">(</span><span class=\"token string\">\"Keyboard\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span>\norder<span class=\"token punctuation\">.</span>add_item<span class=\"token punctuation\">(</span><span class=\"token string\">\"SSD\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">)</span>\norder<span class=\"token punctuation\">.</span>add_item<span class=\"token punctuation\">(</span><span class=\"token string\">\"USB cable\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>order<span class=\"token punctuation\">.</span>total_price<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nprocessor <span class=\"token operator\">=</span> PaypalPaymentProcessor<span class=\"token punctuation\">(</span><span class=\"token string\">\"hi@arjancodes.com\"</span><span class=\"token punctuation\">)</span>\nprocessor<span class=\"token punctuation\">.</span>auth_sms<span class=\"token punctuation\">(</span><span class=\"token number\">465839</span><span class=\"token punctuation\">)</span>\nprocessor<span class=\"token punctuation\">.</span>pay<span class=\"token punctuation\">(</span>order<span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"the-dependency-inversion-principle-dip\" style=\"position:relative;\"><a href=\"#the-dependency-inversion-principle-dip\" aria-label=\"the dependency inversion principle dip permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The Dependency inversion Principle (DIP)</h2>\n<p>Dependency inversion means i want our classes to depend on abstractions and not on concrete subclasses and in this code this is currently an issue because the payment processes are depending on specific authorizers.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> abc <span class=\"token keyword\">import</span> ABC<span class=\"token punctuation\">,</span> abstractmethod\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Order</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>items <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        self<span class=\"token punctuation\">.</span>quantities <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        self<span class=\"token punctuation\">.</span>prices <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        self<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token string\">\"open\"</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">add_item</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> quantity<span class=\"token punctuation\">,</span> price<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>quantities<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>quantity<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>prices<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>price<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">total_price</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        total <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>prices<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            total <span class=\"token operator\">+=</span> self<span class=\"token punctuation\">.</span>quantities<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> self<span class=\"token punctuation\">.</span>prices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">return</span> total\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">SMSAuthorizer</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>authorized <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">verify_code</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Verifying SMS code </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>code<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>authorized <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">is_authorized</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>authorized\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">PaymentProcessor</span><span class=\"token punctuation\">(</span>ABC<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token decorator annotation punctuation\">@abstractmethod</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">pay</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> order<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">pass</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">DebitPaymentProcessor</span><span class=\"token punctuation\">(</span>PaymentProcessor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> security_code<span class=\"token punctuation\">,</span> authorizer<span class=\"token punctuation\">:</span> SMSAuthorizer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>security_code <span class=\"token operator\">=</span> security_code\n        self<span class=\"token punctuation\">.</span>authorizer <span class=\"token operator\">=</span> authorizer\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">pay</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> order<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> self<span class=\"token punctuation\">.</span>authorizer<span class=\"token punctuation\">.</span>is_authorized<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">\"Not authorized\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Processing debit payment type\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Verifying security code: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>security_code<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n        order<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token string\">\"paid\"</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">CreditPaymentProcessor</span><span class=\"token punctuation\">(</span>PaymentProcessor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> security_code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>security_code <span class=\"token operator\">=</span> security_code\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">pay</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> order<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Processing credit payment type\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Verifying security code: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>security_code<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n        order<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token string\">\"paid\"</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">PaypalPaymentProcessor</span><span class=\"token punctuation\">(</span>PaymentProcessor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> email_address<span class=\"token punctuation\">,</span> authorizer<span class=\"token punctuation\">:</span> SMSAuthorizer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>email_address <span class=\"token operator\">=</span> email_address\n        self<span class=\"token punctuation\">.</span>authorizer <span class=\"token operator\">=</span> authorizer\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">pay</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> order<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> self<span class=\"token punctuation\">.</span>authorizer<span class=\"token punctuation\">.</span>is_authorized<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">\"Not authorized\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Processing paypal payment type\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Using email address: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>email_address<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n        order<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token string\">\"paid\"</span>\n\n\norder <span class=\"token operator\">=</span> Order<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\norder<span class=\"token punctuation\">.</span>add_item<span class=\"token punctuation\">(</span><span class=\"token string\">\"Keyboard\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span>\norder<span class=\"token punctuation\">.</span>add_item<span class=\"token punctuation\">(</span><span class=\"token string\">\"SSD\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">)</span>\norder<span class=\"token punctuation\">.</span>add_item<span class=\"token punctuation\">(</span><span class=\"token string\">\"USB cable\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>order<span class=\"token punctuation\">.</span>total_price<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nauthorizer <span class=\"token operator\">=</span> SMSAuthorizer<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># authorizer.verify_code(465839)</span>\nprocessor <span class=\"token operator\">=</span> PaypalPaymentProcessor<span class=\"token punctuation\">(</span><span class=\"token string\">\"hi@arjancodes.com\"</span><span class=\"token punctuation\">,</span> authorizer<span class=\"token punctuation\">)</span>\nprocessor<span class=\"token punctuation\">.</span>pay<span class=\"token punctuation\">(</span>order<span class=\"token punctuation\">)</span></code></pre></div>\n<p>To solve that we need to create another abstract authorizer class that you pass to the payment processors.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> abc <span class=\"token keyword\">import</span> ABC<span class=\"token punctuation\">,</span> abstractmethod\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Order</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>items <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        self<span class=\"token punctuation\">.</span>quantities <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        self<span class=\"token punctuation\">.</span>prices <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        self<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token string\">\"open\"</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">add_item</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> quantity<span class=\"token punctuation\">,</span> price<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>quantities<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>quantity<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>prices<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>price<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">total_price</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        total <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>prices<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            total <span class=\"token operator\">+=</span> self<span class=\"token punctuation\">.</span>quantities<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> self<span class=\"token punctuation\">.</span>prices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">return</span> total\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Authorizer</span><span class=\"token punctuation\">(</span>ABC<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token decorator annotation punctuation\">@abstractmethod</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">is_authorized</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">pass</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Authorizer_SMS</span><span class=\"token punctuation\">(</span>Authorizer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>authorized <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">verify_code</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Verifying SMS code </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>code<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>authorized <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">is_authorized</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>authorized\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Authorizer_Google</span><span class=\"token punctuation\">(</span>Authorizer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>authorized <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">verify_code</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Verifying Google auth code </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>code<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>authorized <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">is_authorized</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>authorized\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Authorizer_Robot</span><span class=\"token punctuation\">(</span>Authorizer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>authorized <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">not_a_robot</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>authorized <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">is_authorized</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>authorized\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">PaymentProcessor</span><span class=\"token punctuation\">(</span>ABC<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token decorator annotation punctuation\">@abstractmethod</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">pay</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> order<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">pass</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">DebitPaymentProcessor</span><span class=\"token punctuation\">(</span>PaymentProcessor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> security_code<span class=\"token punctuation\">,</span> authorizer<span class=\"token punctuation\">:</span> Authorizer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>security_code <span class=\"token operator\">=</span> security_code\n        self<span class=\"token punctuation\">.</span>authorizer <span class=\"token operator\">=</span> authorizer\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">pay</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> order<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> self<span class=\"token punctuation\">.</span>authorizer<span class=\"token punctuation\">.</span>is_authorized<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">\"Not authorized\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Processing debit payment type\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Verifying security code: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>security_code<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n        order<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token string\">\"paid\"</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">CreditPaymentProcessor</span><span class=\"token punctuation\">(</span>PaymentProcessor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> security_code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>security_code <span class=\"token operator\">=</span> security_code\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">pay</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> order<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Processing credit payment type\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Verifying security code: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>security_code<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n        order<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token string\">\"paid\"</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">PaypalPaymentProcessor</span><span class=\"token punctuation\">(</span>PaymentProcessor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> email_address<span class=\"token punctuation\">,</span> authorizer<span class=\"token punctuation\">:</span> Authorizer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>email_address <span class=\"token operator\">=</span> email_address\n        self<span class=\"token punctuation\">.</span>authorizer <span class=\"token operator\">=</span> authorizer\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">pay</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> order<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> self<span class=\"token punctuation\">.</span>authorizer<span class=\"token punctuation\">.</span>is_authorized<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">\"Not authorized\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Processing paypal payment type\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Using email address: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>email_address<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n        order<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token string\">\"paid\"</span>\n\n\norder <span class=\"token operator\">=</span> Order<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\norder<span class=\"token punctuation\">.</span>add_item<span class=\"token punctuation\">(</span><span class=\"token string\">\"Keyboard\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span>\norder<span class=\"token punctuation\">.</span>add_item<span class=\"token punctuation\">(</span><span class=\"token string\">\"SSD\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">)</span>\norder<span class=\"token punctuation\">.</span>add_item<span class=\"token punctuation\">(</span><span class=\"token string\">\"USB cable\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>order<span class=\"token punctuation\">.</span>total_price<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nauthorizer <span class=\"token operator\">=</span> Authorizer_Robot<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># authorizer.verify_code(465839)</span>\nauthorizer<span class=\"token punctuation\">.</span>not_a_robot<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nprocessor <span class=\"token operator\">=</span> PaypalPaymentProcessor<span class=\"token punctuation\">(</span><span class=\"token string\">\"hi@arjancodes.com\"</span><span class=\"token punctuation\">,</span> authorizer<span class=\"token punctuation\">)</span>\nprocessor<span class=\"token punctuation\">.</span>pay<span class=\"token punctuation\">(</span>order<span class=\"token punctuation\">)</span></code></pre></div>","excerpt":"SOLID is a mnemonic abbreviation for a set of design principles created for software development in object-oriented languages. The Single-R…","tableOfContents":"<ul>\n<li><a href=\"/pages/solid-principles/#the-single-responsibility-principle-srp\">The Single-Responsibility Principle (SRP)</a></li>\n<li><a href=\"/pages/solid-principles/#the-open-closed-principle-ocp\">The Open-Closed Principle (OCP)</a></li>\n<li><a href=\"/pages/solid-principles/#the-liskov-substitution-principle-lsp\">The Liskov Substitution Principle (LSP)</a></li>\n<li><a href=\"/pages/solid-principles/#the-interface-segregation-principle-isp\">The Interface Segregation Principle (ISP)</a></li>\n<li><a href=\"/pages/solid-principles/#the-dependency-inversion-principle-dip\">The Dependency inversion Principle (DIP)</a></li>\n</ul>","fields":{"slug":"/solid-principles/"},"frontmatter":{"title":"SOLID principles","date":"Jan 22, 2022","tags":["principles","python"],"keywords":["ecmascript","es7","es8","es9","es10","es11","es2016","es2017","es2018","es2019","es2020"],"update":"Feb 06, 2022"}}},"pageContext":{"slug":"/solid-principles/","series":[],"lastmod":"2022-02-06"}},"staticQueryHashes":["2027115977","694178885"]}